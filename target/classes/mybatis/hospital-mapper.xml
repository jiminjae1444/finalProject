<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itbank.finalProject.repository.HospitalDAO">


	<!-- 민재 파트 -->

    <select id="getHospitalsByKeywords" resultType="com.itbank.finalProject.model.HospitalDTO">
        select distinct  hospital.*
        from hospital
        join hospital_jinryo ON hospital_jinryo.hospital_id = hospital.hospital_id
        join jinryo ON jinryo.jinryo_code = hospital_jinryo.jinryo_code
        join symptoms ON symptoms.jinryo_code = jinryo.jinryo_code
        where
        <foreach item="keyword" collection="searchList" open="(" separator="OR" close=")">
            replace(symptoms.symptoms, ' ', '') like '%' || replace(#{keyword}, ' ', '') || '%'
            or replace(symptoms.disease_name, ' ', '') like '%' || replace(#{keyword}, ' ', '') || '%'
        </foreach>
    </select>

    <select id="ContainsBodyList" resultType="com.itbank.finalProject.model.HospitalDTO">
        select distinct  hospital.*
        from hospital
        join hospital_jinryo ON hospital_jinryo.hospital_id = hospital.hospital_id
        join jinryo ON jinryo.jinryo_code = hospital_jinryo.jinryo_code
        join symptoms ON symptoms.jinryo_code = jinryo.jinryo_code
        where
        <foreach item="keyword" collection="searchList" open="(" separator="OR" close=")">
            replace(symptoms.body, ' ', '') like '%' || replace(#{keyword}, ' ', '') || '%'
        </foreach>
    </select>

    <select id="getHospitalsByName" resultType="com.itbank.finalProject.model.HospitalDTO">
        select *
        from hospital
        where replace(hospital_name, ' ', '') like '%' || replace(#{hospital}, ' ', '') || '%'
    </select>

    <select id="getNullList" resultType="com.itbank.finalProject.model.HospitalDTO">
        select * from HOSPITAL where LAT is null or LNG is null
    </select>

    <select id="selectAllList" resultType="com.itbank.finalProject.model.HospitalDTO">
        select * from hospital
    </select>

    <update id="updateLatAndLng">
        update hospital set lat = #{lat} , lng = #{lng} where id = #{id}
    </update>

    <select id="selectOne" resultType="com.itbank.finalProject.model.HospitalDTO">
        select * from hospital where id = #{hospitalId}
    </select>

    <insert id="insertKeyword">
        merge into search_history
        using dual
        on (search_history.keyword =#{kw})
        when matched then
            update set search_history.count = search_history.count + 1
        when not matched then
            insert (search_history.keyword)
            values (#{kw})
    </insert>

    <select id="getHospitalInfo" resultType="com.itbank.finalProject.model.HospitalDTO">
     select * from hospital where id = #{id}
    </select>

    <select id="getJinryoNames" resultType="java.lang.String">
        select JINRYO.JINRYO_NAME from HOSPITAL_JINRYO join JINRYO on HOSPITAL_JINRYO.JINRYO_CODE = JINRYO.JINRYO_CODE join HOSPITAL on HOSPITAL.HOSPITAL_ID =  HOSPITAL_JINRYO.hospital_id where HOSPITAL.id = #{id}
    </select>

    <select id="findHospitalNameById" resultType="com.itbank.finalProject.model.HospitalDTO">
        SELECT hospital.*, jinryo.JINRYO_NAME
        FROM HOSPITAL
        JOIN HOSPITAL_JINRYO HJ ON HOSPITAL.hospital_ID = HJ.HOSPITAL_ID
        JOIN jinryo ON HJ.JINRYO_CODE = jinryo.JINRYO_CODE
        WHERE HOSPITAL.id = #{id}
        ORDER BY DBMS_RANDOM.VALUE()
        FETCH FIRST 1 ROW ONLY
    </select>
    
    <update id="updateViewCount">
      CALL update_view_count(#{hospitalId})
    </update>
    
    
    
    <!-- 호준 파트 -->
    	<select id="selectSidoList" parameterType="int" resultType="hospital">
		select
    		hospital.sido_name,
    		hospital.sido_code
       			from hospital 
        		join hospital_jinryo
            		on hospital.hospital_id = hospital_jinryo.hospital_id
        		join jinryo
            		on hospital_jinryo.jinryo_code = jinryo.jinryo_code
        		where jinryo.jinryo_code = #{jinryo_code}    
            		group by hospital.sido_name, hospital.sido_code
            		order by hospital.sido_code
	</select>
	
	<select id="selectGuList" resultType="hospital">
		select
    		hospital.gu_name,
    		hospital.gu_code
        		from hospital 
        		join hospital_jinryo
            		on hospital.hospital_id = hospital_jinryo.hospital_id
        		join jinryo
            		on hospital_jinryo.jinryo_code = jinryo.jinryo_code
        		where jinryo.jinryo_code = #{param1} and hospital.sido_code = #{param2}
           			group by hospital.gu_name, hospital.gu_code
           			order by hospital.gu_code
	</select>
	
	<select id="selectHospitalList" resultType="hospital">
		select
    		hospital.hospital_name,
    		hospital.address,
    		hospital.tel
        		from hospital 
        		join hospital_jinryo
            		on hospital.hospital_id = hospital_jinryo.hospital_id
        		join jinryo
            		on hospital_jinryo.jinryo_code = jinryo.jinryo_code
        		where jinryo.jinryo_code = #{param1} and hospital.sido_code = #{param2} and hospital.gu_code = #{param3}
	</select>
	
	<select id="getHospitalCnt" resultType="int">
		select
    		count(*)
        		from hospital
        		join hospital_jinryo
            		on hospital.hospital_id = hospital_jinryo.hospital_id
        		join jinryo
            		on hospital_jinryo.jinryo_code = jinryo.jinryo_code
        		where jinryo.jinryo_code = #{param1} and hospital.sido_code = #{param2} and hospital.gu_code = #{param3}
	</select>
	
	<select id="selectPagingHospitalList" resultType="hospital">
		select 
			hospital.id,
			hospital.hospital_name,
			hospital.address,
			hospital.tel
				from hospital
				join hospital_jinryo
					on hospital.hospital_id = hospital_jinryo.hospital_id 
				join jinryo
            		on hospital_jinryo.jinryo_code = jinryo.jinryo_code
			    where jinryo.jinryo_code = #{param1} and hospital.sido_code = #{param2} and hospital.gu_code = #{param3}
			   		offset #{param4} rows
			   		fetch first #{param5} rows only
	</select>
    
    <select id="getReviewToHomepage" resultType="review">
    	select hospital.id as hospital_id, hospital.hospital_name, member.userid, review.comments, review.rating
		    from review
		    join hospital
		        on review.hospital_id = hospital.id
		    join member
		        on review.member_id = member.id
				    order by rating desc, DBMS_RANDOM.VALUE()
		    			fetch first 4 rows only
    </select>
    
</mapper>







